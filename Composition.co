#include "syntaxme.h"
#include <stdio.h>

object NamedController(int aValue, int bValue, {
    /* Compose models */
    Data data1 = Data "new";

    /* Inherit behaviour */
    implements Messages;

    /* EQUIV */
    /*
        (NamedController*) self |> "new" |> {
            struct NamedController _obj = malloc(sizeof(NamedController*) + 1);
            ...
            ...
            _obj;
        }
    */
    initialize({
        data1 "set" a, aValue;
        data1 "set" b, bValue;
    });

    // (int) self |> "add" |> {
    "add" |> {
        data1 "get" a + data1 "get" b;
    }
    // (int) self |> "sub" |> {
    "sub" |> {
        data1 "get" a - data1 "get" b;
    }
    // (int) self |> "mul" |> {
    "mul" |> {
        data1 "get" a * data1 "get" b;
    }
    // (int) self |> "div" |> {
    "div" |> {
        data1 "get" a / data1 "get" b;
    }
    
    defer({});
});

/* EQUIV */
/*
    (int) self |> "get a" |> return self->a;
    (void) self |> "set b" |> (int): aValue |> self->a = aValue;
    
    (int) self |> "get b" |> return self->b;
    (void) self |> "set b" |> (int): bValue |> self->b = bValue;
*/
model Data({
    accessor({
        int a;
        int b;
    });
});

protocol Messages({
    (int) self |> "add";
    (int) self |> "sub";
    (int) self |> "mul";
    (int) self |> "div";
});

int main(void) {
    NamedController obj = NamedController(2, 2) "new";
    printf("%d\n", obj "add"); /* `4` */

    obj "set a" 5;
    obj "set b" 3;
    int res = obj "add";
    printf("%d\n", res); /* `8` */

    return 0;
}