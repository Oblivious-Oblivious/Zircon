#include "syntaxme.h"

object NamedController(int aValue, int bValue, {
    implements model Data data1;
    implements protocol Messages;

    initialize({
        /* ALSO */
        /*
            self |> "new" |> {
                struct NamedController _obj = malloc(sizeof(*NamedController) + 1);
                ...
                ...
                return _obj;
            }
        */
        data1 "set" a, aValue;
        data1 "set" b, bValue;
    });

    void |> "add" |> return data1 "get" a + data1 "get" b;
    void |> "sub" |> return data1 "get" a - data1 "get" b;
    void |> "mul" |> return data1 "get" a * data1 "get" b;
    void |> "div" |> return data1 "get" a / data1 "get" b;
    
    defer();
});

singleton ThreadSafe(int aSingleValue, int bSingleValue, {
    accessor({
        int aSingleValue;
        int bSingleValue;
    });

    "add" {
        return self.aSingleValue + self.bSingleValue;
    }
});

model Data({
    accessor({
        int a;
        int b;
        /* EQUIV */
        /*
            int, int |> "set" |> self.$1 = $1;
            int |> "get" |> return self.$1;
        */
    });
});

protocol Messages({
    void |> "add" |> int;
    void |> "sub" |> int;
    void |> "mul" |> int;
    void |> "div" |> int;
});

int main(void) {
    NamedController obj = NamedController "new";
    int res = obj "add" 2, 2;
    printf("%d\n", res);
    return 0;
}