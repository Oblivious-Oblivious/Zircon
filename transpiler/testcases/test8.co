#import "Object"

#include <stdio.h>

model Composition_Model {
    int a;
    int b;
}

// protocol Composition_Protocol implements Object {
//     (int) self |> "add";
//     (int) self |> "sub";
//     (int) self |> "mul";
//     (int) self |> "div";
// }

object Composition implements Object(int aValue, int bValue) {
    fields {
        /* Compose objects */
        // Composition_Model data1;
        implements Composition_Model;
    }

    init {
        // self->data1 = Composition_Model "new";
        // self->data1->a = aValue;
        // self->data1->b = bValue;
        self->a = aValue;
        self->b = bValue;
    }

    // (void) self |> "set a" |> (int): a |> self->data1->a = a;
    // (void) self |> "set b" |> (int): b |> self->data1->b = b;

    (int) self |> "add" |> return self->a + self->b;
    (int) self |> "sub" |> return self->a - self->b;
    (int) self |> "mul" |> return self->a * self->b;
    (int) self |> "div" |> {
        if(self->b != 0)
            return self->a / self->b;
        return -1;
    }

    defer {}
}

int main(void) {
    void *obj = Composition "new" 2, 2;
    printf("%d\n", obj "add");

    obj "set a" 5;
    obj "set b" 3;

    int res = obj "add";
    printf("%d\n", res);

    return 0;
}