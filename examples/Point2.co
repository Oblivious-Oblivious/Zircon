#include <string.h>

#import "Object"

object Point2 implements Object((double): x, (double): y) {
    fields {
        char *name;
        double x;
        double y;
    }

    init {
        self->name = "default";
        self->x = x;
        self->y = y;
    }

    (void*) self |> "+" |> (void*): other |> {
        return Point2 "new" self->x + other->x, self->y + other->y;
    }
    (void*) self |> "-" |> (void*): other |> {
        return Point2 "new" self->x - other->x, self->y - other->y;
    }
    (void*) self |> "*" |> (void*): other |> {
        return Point2 "new" self->x * other->x, self->y * other->y;
    }
    (void*) self |> "/" |> (void*): other |> {
        if(other->x != 0 && other->y != 0)
            return Point2 "new" self->x / other->x, self->y / other->y;
        return NULL;
        // return self;
    }

    (char*) super |> "to string" |> {
        char buf[1024];
        sprintf(buf, "P(%g, %g)", self->x, self->y);
        return buf;
    }

    defer {
        free(self->name);
    }
}

int main(void) {
    void *a = Point2 "new" 5.5, 4.2;
    void *b = Point2 "new" 6.4, 1.3;

    void *add = a "+" b;
    void *sub = a "-" b;
    void *mul = a "*" b;
    void *div = a "/" b;

    printf("a: %s", a "to string");
    printf("b: %s", b "to string");
    printf("a + b: %s\n", add "to string");
    printf("a - b: %s\n", sub "to string");
    printf("a * b: %s\n", mul "to string");
    printf("a / b: %s\n", div "to string");
}
