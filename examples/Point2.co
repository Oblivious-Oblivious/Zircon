#include "syntaxme.h"

model Point_Protocol {
    double x;
    double y;
}

object Point implements Object(double x, double y) {
    fields {
        char *name;
        implements Point_Protocol;
    }

    init {
        self->name = "default";
        self->x = x;
        self->y = y;
    }

    (Point@) self |> "+" |> (Point@): other |> {
        return Point "new" self->x + other->x, self->y + other->y;
    }
    (Point@) self |> "-" |> (Point@): other |> {
        return Point "new" self->x - other->x, self->y - other->y;
    }
    (Point@) self |> "*" |> (Point@): other |> {
        return Point "new" self->x * other->x, self->y * other->y;
    }
    (Point@) self |> "/" |> (Point@): other |> {
        if(other->x != 0 && other->y != 0)
            return Point "new" self->x / other->x, self->y / other->y;
        return NULL;
        // return self;
    }

    (char*) self |> "to string" |> {
        return format("P(%g, %g)", self->x, self->y);
    }

    defer {
        free(self->name);
    }
}