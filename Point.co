#include "syntaxme.h"

object Point(double x, double y, {
    initialize({});

    accessor({
        double x;
        double y;
    });

    (Point*) self |> "+" |> (Point*): other |> {
        Point(self->x + other->x, self->y + other->y) "new";
    }
    (Point*) self |> "-" |> (Point*): other |> {
        Point(self->x - other->x, self->y - other->y) "new";
    }
    (Point*) self |> "*" |> (Point*): other |> {
        Point(self->x * other->x, self->y * other->y) "new";
    }
    (Point*) self |> "/" |> (Point*): other |> {
        if(other->x != 0 && other->y != 0)
            return Point(self->x / other->x, self->y / other->y) "new";
        nil;
        // self;
    }

    (char*) self |> "to string" |> {
        format("P(%d, %d)", self->x, self->y);
    }

    defer({});
});